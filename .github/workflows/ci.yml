name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: "--health-cmd='mongo --eval \"db.runCommand({ping: 1})\"' --health-interval=10s --health-timeout=5s --health-retries=3"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache npm modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint

      - name: Run Unit Tests
        run: npm test

      - name: Build Docker image
        run: docker build -t project-image .

  push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker Image
        run: |
          IMAGE_NAME=motezbouchhioua/backend-express-app
          TAG=${{ github.sha }}
          docker tag project-image $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:$TAG
          docker tag project-image $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest
